
message(STATUS "include Platform.cmake")

if(NOT RE_TARGET_PLATFORM)
	IF (WIN32)
		MESSAGE(STATUS "Current System WIN32")
		set(RE_TARGET_PLATFORM "Windows")
	ELSEIF (APPLE)
		MESSAGE(STATUS "Current System Apple")
		set(RE_TARGET_PLATFORM "MacOS")
	ELSEIF (UNIX)
		MESSAGE(STATUS "Current System Unix")
		set(RE_TARGET_PLATFORM "Linux")
	ENDIF ()
endif()

set(IS_WINDOWS 	0)
set(IS_MACOS 	0)
set(IS_LINUX 	0)
set(IS_IOS 		0)
set(IS_ANDROID 	0)

if(${RE_TARGET_PLATFORM} STREQUAL "Windows")
	set(IS_WINDOWS 1)
	include("${CMAKE_CURRENT_LIST_DIR}/Windows.cmake")
elseif(${RE_TARGET_PLATFORM} STREQUAL "MacOS")
	set(IS_MACOS 1)
	include("${CMAKE_CURRENT_LIST_DIR}/MacOS.cmake")
elseif(${RE_TARGET_PLATFORM} STREQUAL "Linux")
	set(IS_LINUX 1)
	include("${CMAKE_CURRENT_LIST_DIR}/Linux.cmake")
elseif(${RE_TARGET_PLATFORM} STREQUAL "iOS")
	set(IS_IOS 1)
	include("${CMAKE_CURRENT_LIST_DIR}/iOS.cmake")
elseif(${RE_TARGET_PLATFORM} STREQUAL "Android")
	set(IS_ANDROID 1)
	include("${CMAKE_CURRENT_LIST_DIR}/Android.cmake")
endif()


function(ReMake_IsValidPlatformFileOrDir Dir ReturnValue)

	set(${ReturnValue} 1 PARENT_SCOPE)

	get_filename_component(dirName ${Dir} NAME)
	get_filename_component(dirParent ${Dir} PATH)

	if("${dirName}" STREQUAL "")
		return()
	endif()

	if(${dirName} STREQUAL "Windows")
		if(NOT IS_WINDOWS EQUAL 1)
			set(${ReturnValue} 0 PARENT_SCOPE)
		endif ()
	elseif(${dirName} STREQUAL "Mac")
		if(NOT IS_MACOS EQUAL 1)
			set(${ReturnValue} 0 PARENT_SCOPE)
		endif ()
	elseif (${dirName} STREQUAL "Linux")
		if(NOT IS_LINUX EQUAL 1)
			set(${ReturnValue} 0 PARENT_SCOPE)
		endif ()
	elseif(${dirName} STREQUAL "IOS")
		if(NOT IS_IOS EQUAL 1)
			set(${ReturnValue} 0 PARENT_SCOPE)
		endif ()
	elseif(${dirName} STREQUAL "Android")
		if(NOT IS_ANDROID EQUAL 1)
			set(${ReturnValue} 0 PARENT_SCOPE)
		endif ()
	else()
		set(isValidSubDir 0)
		ReMake_IsValidPlatformFileOrDir(${dirParent} isValidSubDir)
		if(NOT ${isValidSubDir} EQUAL 1)
			set(${ReturnValue} 0 PARENT_SCOPE)
		endif()
	endif()

endfunction()